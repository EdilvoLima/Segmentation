/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.ufrn.imd.lp2.gui;

import br.ufrn.imd.lp2.annotation.Annotation;
import br.ufrn.imd.lp2.imagem.Images;
import br.ufrn.imd.lp2.segmentation.Segmentation;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author edilvolima
 */
public class ProjetoGUI extends javax.swing.JFrame {

    /**
     * Creates new form ProjetoGUI
     */
    private Images buffer;
    private Segmentation segmentation;
    private Annotation annotation;
    private Persistence persistence;

    public ProjetoGUI() {
        initComponents();
        buffer = new Images();
        configSetup();
        persistence = new Persistence();
    }

    public void configSetup() {
        btnSegmentation.setEnabled(false);
        resetImageAreas();
    }

    /**
     * Inicializa e prepara as areas de visualizao para segmentacao
     */
    public void resetImageAreas() {
        imageOriginal.setIcon(new ImageIcon());
        imageOriginal.setText("Original");
        imageMarked.setIcon(new ImageIcon());
        imageMarked.setText("Marked");
        imageSegmented.setIcon(new ImageIcon());
        imageSegmented.setText("Segmented");
        imageAnnotation.setIcon(new ImageIcon());
        imageAnnotation.setText("Annotaded");
        textAreaLabels.setText(null);
        labelTotalRegions.setText("");
    }

    /**
     * Insere a imagem no local apropriado
     *
     * @param label
     * @param buffer
     */
    public void setImage(JLabel label, BufferedImage buffer) {
        if (buffer != null) {
            label.setIcon(new ImageIcon(buffer));
            label.setText("");
            label.setVisible(true);
            label.repaint();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel9 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelImageOriginal = new javax.swing.JPanel();
        imageOriginal = new javax.swing.JLabel();
        jPanelImageMarked = new javax.swing.JPanel();
        imageMarked = new javax.swing.JLabel();
        jPanelImageSegmented = new javax.swing.JPanel();
        imageSegmented = new javax.swing.JLabel();
        jPanelConfig = new javax.swing.JPanel();
        paramBlurLevel = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        paramColorRadius = new javax.swing.JSpinner();
        paramMinSize = new javax.swing.JSpinner();
        jButton1 = new javax.swing.JButton();
        btnSegmentation = new javax.swing.JButton();
        btnLoadImage = new javax.swing.JButton();
        labelTotalRegions = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanelImageAnnotation = new javax.swing.JPanel();
        imageAnnotation = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaLabels = new javax.swing.JTextArea();
        paramTagName = new javax.swing.JTextField();
        btnAddTag = new javax.swing.JButton();
        paramHighlightLevel = new javax.swing.JSpinner();
        labelHihlightLevel = new javax.swing.JLabel();
        labelRegionNumber = new javax.swing.JLabel();
        btnClearSelection = new javax.swing.JButton();
        btnFinishAnnotation = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jTextField2.setText("jTextField2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Images"));

        imageOriginal.setText("ImageOriginal");

        javax.swing.GroupLayout jPanelImageOriginalLayout = new javax.swing.GroupLayout(jPanelImageOriginal);
        jPanelImageOriginal.setLayout(jPanelImageOriginalLayout);
        jPanelImageOriginalLayout.setHorizontalGroup(
            jPanelImageOriginalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelImageOriginalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageOriginal)
                .addContainerGap())
        );
        jPanelImageOriginalLayout.setVerticalGroup(
            jPanelImageOriginalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelImageOriginalLayout.createSequentialGroup()
                .addComponent(imageOriginal)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Original", jPanelImageOriginal);

        imageMarked.setText("imageMarked");

        javax.swing.GroupLayout jPanelImageMarkedLayout = new javax.swing.GroupLayout(jPanelImageMarked);
        jPanelImageMarked.setLayout(jPanelImageMarkedLayout);
        jPanelImageMarkedLayout.setHorizontalGroup(
            jPanelImageMarkedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelImageMarkedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageMarked)
                .addContainerGap())
        );
        jPanelImageMarkedLayout.setVerticalGroup(
            jPanelImageMarkedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelImageMarkedLayout.createSequentialGroup()
                .addComponent(imageMarked)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Marked", jPanelImageMarked);

        jPanelImageSegmented.setPreferredSize(new java.awt.Dimension(150, 350));

        imageSegmented.setText("imageSegmented");

        javax.swing.GroupLayout jPanelImageSegmentedLayout = new javax.swing.GroupLayout(jPanelImageSegmented);
        jPanelImageSegmented.setLayout(jPanelImageSegmentedLayout);
        jPanelImageSegmentedLayout.setHorizontalGroup(
            jPanelImageSegmentedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelImageSegmentedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageSegmented)
                .addContainerGap())
        );
        jPanelImageSegmentedLayout.setVerticalGroup(
            jPanelImageSegmentedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelImageSegmentedLayout.createSequentialGroup()
                .addComponent(imageSegmented)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Segmented", jPanelImageSegmented);

        jPanelConfig.setBorder(javax.swing.BorderFactory.createTitledBorder("Menu"));

        paramBlurLevel.setModel(new javax.swing.SpinnerNumberModel(0.5d, 0.0d, 1.0d, 0.1d));

        jLabel1.setText("Blur Level:");

        jLabel2.setText("Color Radius:");

        jLabel3.setText("Min Size:");

        paramColorRadius.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(50.0d), null, null, Double.valueOf(1.0d)));

        paramMinSize.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(500.0d), null, null, Double.valueOf(10.0d)));

        jButton1.setText("Load Label Map");

        btnSegmentation.setText("Segmental");
        btnSegmentation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSegmentationActionPerformed(evt);
            }
        });

        btnLoadImage.setText("Load Image");
        btnLoadImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadImageActionPerformed(evt);
            }
        });

        labelTotalRegions.setText("   ");

        javax.swing.GroupLayout jPanelConfigLayout = new javax.swing.GroupLayout(jPanelConfig);
        jPanelConfig.setLayout(jPanelConfigLayout);
        jPanelConfigLayout.setHorizontalGroup(
            jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelConfigLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelConfigLayout.createSequentialGroup()
                        .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(paramColorRadius)
                            .addComponent(paramMinSize)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelConfigLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(paramBlurLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLoadImage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSegmentation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelTotalRegions, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelConfigLayout.setVerticalGroup(
            jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConfigLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLoadImage)
                .addGap(18, 18, 18)
                .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paramBlurLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paramColorRadius, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(paramMinSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 222, Short.MAX_VALUE)
                .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelTotalRegions, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(btnSegmentation)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 607, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelConfig, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelConfig, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );

        jTabbedPane2.addTab("Segmentation", jPanel1);

        jPanelImageAnnotation.setBorder(javax.swing.BorderFactory.createTitledBorder("Images"));

        imageAnnotation.setText("imageAnnotation");
        imageAnnotation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imageAnnotationMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelImageAnnotationLayout = new javax.swing.GroupLayout(jPanelImageAnnotation);
        jPanelImageAnnotation.setLayout(jPanelImageAnnotationLayout);
        jPanelImageAnnotationLayout.setHorizontalGroup(
            jPanelImageAnnotationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelImageAnnotationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageAnnotation)
                .addContainerGap())
        );
        jPanelImageAnnotationLayout.setVerticalGroup(
            jPanelImageAnnotationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelImageAnnotationLayout.createSequentialGroup()
                .addComponent(imageAnnotation)
                .addContainerGap())
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Annotation"));

        textAreaLabels.setColumns(15);
        textAreaLabels.setRows(5);
        textAreaLabels.setTabSize(5);
        jScrollPane1.setViewportView(textAreaLabels);

        btnAddTag.setText("+");
        btnAddTag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTagActionPerformed(evt);
            }
        });

        paramHighlightLevel.setModel(new javax.swing.SpinnerNumberModel(50, 1, 100, 5));

        labelHihlightLevel.setText("Highlight Level:");

        labelRegionNumber.setText("Label:");

        btnClearSelection.setText("Clear Selection");
        btnClearSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearSelectionActionPerformed(evt);
            }
        });

        btnFinishAnnotation.setText("Finish Annotation");
        btnFinishAnnotation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinishAnnotationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnClearSelection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(paramTagName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddTag, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(labelRegionNumber)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(labelHihlightLevel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                                .addComponent(paramHighlightLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(btnFinishAnnotation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paramHighlightLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelHihlightLevel))
                .addGap(29, 29, 29)
                .addComponent(labelRegionNumber)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paramTagName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddTag))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClearSelection)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 187, Short.MAX_VALUE)
                .addComponent(btnFinishAnnotation)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelImageAnnotation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelImageAnnotation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jTabbedPane2.addTab("Annotation", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Carrega as imagens (Original) na devida aba da GUI
     *
     * @param evt
     */
    private void btnLoadImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadImageActionPerformed
        JFileChooser fc = new JFileChooser();

        int res = fc.showOpenDialog(null);
        if (res == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            buffer.setFilepath(file.getAbsolutePath());
            buffer.setFileName(file.getName());

            try {
                buffer.setImage(ImageIO.read(file));
            } catch (IOException exc) {
                JOptionPane.showMessageDialog(null,
                        "Erro ao carregar a imagem: "
                        + exc.getMessage());
            }

            this.resetImageAreas();
            jTabbedPane1.setSelectedIndex(jTabbedPane1.indexOfTab("Original"));

            this.setImage(imageOriginal, buffer.getImage());

            //habilita o btnSegmental
            btnSegmentation.setEnabled(true);

        }
    }//GEN-LAST:event_btnLoadImageActionPerformed

    /**
     * Realiza a segmentacao da imagem e carrega as imagens (Original, Marcada e
     * Mapa de Rotulos) nas devidas abas da GUI
     *
     * @param evt
     */
    private void btnSegmentationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSegmentationActionPerformed
        // TODO add your handling code here:
        if (buffer != null) {
            segmentation = new Segmentation(buffer.getFilepath(), (double) paramBlurLevel.getValue(),
                    (double) paramColorRadius.getValue(),
                    (double) paramMinSize.getValue());

            annotation = new Annotation();
            segmentation.setFileName(buffer.getFileName());

            labelTotalRegions.setText("Gererated Regions: " + segmentation.getRAW().getTotalRegions());

            //Mostra a imagem marcada
            setImage(imageMarked, segmentation.getRAW().getRegionMarkedImage());

            //Prepara a imagem para anotacao
            setImage(imageAnnotation, segmentation.getRAW().getRegionMarkedImage());

            //Mostra a imagem segmentada
            setImage(imageSegmented, segmentation.getMapLabels().getImage());

            //Muda a visão para a imagem segmentada
            jTabbedPane1.setSelectedIndex(jTabbedPane1.indexOfTab("Marked"));

            
            persistence.save(segmentation);
//            persistence.read();
        }
    }//GEN-LAST:event_btnSegmentationActionPerformed

    /**
     * Seleciona a regiao no local clicado pelo mouse
     *
     * @param evt
     */
    private void imageAnnotationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imageAnnotationMouseClicked
        // TODO add your handling code here:
        int x, y, region;
        int regionSelected = -1;
        int[] mask, grayMap;
        int r, g, b;
        int param = (int) paramHighlightLevel.getValue();
        Color pixel = new Color(0,0,0);
        //buffer.setImage(new BufferedImage(segmentation.getRAW().getWidth(), segmentation.getRAW().getHeight(), 1));

        buffer.setImage(segmentation.getMarkedImage());
        x = evt.getX();
        y = evt.getY();

        //region = segmentation.getMapLabels().getImage().getRGB(x, y);
        region = segmentation.getMapLabels().getImage().getRGB(x, y);
        
        regionSelected = new Color(region).getRed() / segmentation.getScaleSegmentation();
        
        System.out.println(regionSelected);
        mask = annotation.createMask(segmentation.getRAW().getRegionMarkedPixels());
        //mask = segmentation.getRAW().getOriginalPixels();
        grayMap = segmentation.getRAW().getSegmentedImageMap();
        
        annotation.addRegion(regionSelected);

        //Selecao de regioes
        for (int i = 0; i < mask.length; i++) {
            pixel = new Color(mask[i]);
//            System.out.print(grayMap[i]);
//            System.out.print(mask[i]);
//            System.out.print(region);
            if (region != grayMap[i]
                    && !annotation.isSelectedRegion(annotation.getRegionLabel(grayMap[i], segmentation.getScaleSegmentation()))) {
//                System.out.print(grayMap[i]);
//                System.out.print(mask[i]);
//                System.out.print(region);    
//                System.out.println("OK");
                r = pixel.getRed() * param / 100;
                g = pixel.getGreen() * param / 100;
                b = pixel.getBlue() * param / 100;
                pixel = new Color(r, g, b);

                mask[i] = pixel.getRGB();
//                System.out.println("==="+mask[i]);

            } else {
//                System.out.print(grayMap[i]);
//                System.out.print(mask[i]);
//                System.out.print(region);
//                System.out.println("NOT");
//               
//                pixel = new Color(pixel.getRGB());

                mask[i] = pixel.getRGB();
//                System.out.println(mask[i]);
            }
        }

        annotation.printRegions();

        buffer.getImage()
                .setRGB(0, 0, segmentation.getRAW().getWidth(), segmentation.getRAW().getHeight(), mask, 0, segmentation.getRAW().getWidth());

        //atualiza a imagem gerada
        this.setImage(imageAnnotation, buffer.getImage());

        //Guarda o numero da regiao selecionada
        //regionSelected = annotation.getRegionLabel(region, segmentation.getRAW().getTotalRegions());
        System.out.println(regionSelected);

        //System.out.println(regionSelected);

        annotation.setRegionSelected(regionSelected);

        annotation.addRegion(regionSelected);

        //
        if (segmentation.getMapLabels()
                .getLabels(regionSelected) != null) {
            textAreaLabels.setText(segmentation.getMapLabels().getLabels(regionSelected));
        } else {
            textAreaLabels.setText(null);
        }

        //Mostra o numero da regiao selecionada
        labelRegionNumber.setText(
                "Label: " + regionSelected);
    }//GEN-LAST:event_imageAnnotationMouseClicked

    /**
     * Insere um rotulo a imagem referente a regions selecionada
     *
     * @param evt
     */
    private void btnAddTagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTagActionPerformed
        // TODO add your handling code here:
        if (!paramTagName.getText().equals("")) {
            segmentation.getMapLabels().setLabels(annotation.getRegions(),
                    paramTagName.getText());
            textAreaLabels.setText(segmentation.getMapLabels().getLabels(annotation.getRegionSelected()));
            paramTagName.setText(null);
        }

        setImage(imageAnnotation, segmentation.getMarkedImage());
        annotation.clearRegions();
    }//GEN-LAST:event_btnAddTagActionPerformed

    /**
     * Limpa a imagem no processo de anotacao, reiniciando a selecao das regions
     *
     * @param evt
     */
    private void btnClearSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearSelectionActionPerformed
        // TODO add your handling code here:
        annotation.clearRegions();
        textAreaLabels.setText("");
        setImage(imageAnnotation, segmentation.getMarkedImage());
    }//GEN-LAST:event_btnClearSelectionActionPerformed

    private void btnFinishAnnotationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinishAnnotationActionPerformed
        // TODO add your handling code here:
        persistence.save(segmentation);
    }//GEN-LAST:event_btnFinishAnnotationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProjetoGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProjetoGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProjetoGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProjetoGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProjetoGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddTag;
    private javax.swing.JButton btnClearSelection;
    private javax.swing.JButton btnFinishAnnotation;
    private javax.swing.JButton btnLoadImage;
    private javax.swing.JButton btnSegmentation;
    private javax.swing.JLabel imageAnnotation;
    private javax.swing.JLabel imageMarked;
    private javax.swing.JLabel imageOriginal;
    private javax.swing.JLabel imageSegmented;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelConfig;
    private javax.swing.JPanel jPanelImageAnnotation;
    private javax.swing.JPanel jPanelImageMarked;
    private javax.swing.JPanel jPanelImageOriginal;
    private javax.swing.JPanel jPanelImageSegmented;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel labelHihlightLevel;
    private javax.swing.JLabel labelRegionNumber;
    private javax.swing.JLabel labelTotalRegions;
    private javax.swing.JSpinner paramBlurLevel;
    private javax.swing.JSpinner paramColorRadius;
    private javax.swing.JSpinner paramHighlightLevel;
    private javax.swing.JSpinner paramMinSize;
    private javax.swing.JTextField paramTagName;
    private javax.swing.JTextArea textAreaLabels;
    // End of variables declaration//GEN-END:variables
}
